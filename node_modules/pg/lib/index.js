'use strict'

const { Pool } = require('pg')
const { DatabaseError } = require('pg-protocol')
const { escapeIdentifier, escapeLiteral } = require('./utils')

const poolFactory = (Client) => {
  return class BoundPool extends Pool {
    constructor(options) {
      super(options, Client)
    }
  }
}

class PG {
  constructor(clientConstructor) {
    this.defaults = {
      user: 'postgres',
      host: 'localhost',
      database: 'postgres',
      password: '',
      port: 5432,
    }
    this.Client = clientConstructor
    this.Query = this.Client.Query
    this.Pool = poolFactory(this.Client)
    this._pools = []
    this.Connection = require('./connection')
    this.types = require('pg-types')
    this.DatabaseError = DatabaseError
    this.escapeIdentifier = escapeIdentifier
    this.escapeLiteral = escapeLiteral
  }

  static get native() {
    let native = null
    try {
      native = new PG(require('./native'))
    } catch (err) {
      if (err.code !== 'MODULE_NOT_FOUND') {
        throw err
      }
    }

    Object.defineProperty(PG, 'native', {
      value: native,
    })

    return native
  }
}

if (process.env.NODE_PG_FORCE_NATIVE) {
  module.exports = PG.native
} else {
  module.exports = PG
}

