module.exports = extend;

/**
 * Check if `value` is object.
 *
 * @param {Object} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 */
function isObject(value) {
  return value !== null && typeof value === 'object';
}

/**
 * Extend an target object with sources objects.
 *
 * @param {Object} target The target object to extend.
 * @param {...Object} sources The source objects to copy properties from.
 * @returns {Object} Returns the extended target object.
 */
function extend(target) {
  if (!isObject(target)) {
    throw new TypeError('The target must be an object');
  }

  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    if (isObject(source)) {
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    } else {
      throw new TypeError('The sources must be objects');
    }
  }

  return target;
}
